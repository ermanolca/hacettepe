@model Hacettepe.Application.Listing.DatatableResponse<Hacettepe.Application.Users.List.UserDto>
@{
    ViewBag.Title = "Kayıtlı Kullanıcılar";
}
<div class="row">
    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-success" href="@Url.Action("Create")"><i class="bi bi-plus"></i> Yeni Kullanıcı</a>
    </div>
    <br/>
    <table id="usersGrid" class="table table-striped table-bordered dt-responsive nowrap">
        <thead>
        <tr>
            <th>Adı Soyadı</th>
            <th>E-Posta</th>
            <th></th>
        </tr>
        </thead>
    </table>
</div>

@section scripts
{
    <script src="/lib/DataTables/datatables.min.js"></script>
    
    <script type="text/javascript">
    
        $('#usersGrid').dataTable({
            "language" : {
                url: 'https://cdn.datatables.net/plug-ins/2.1.3/i18n/tr.json',
            },
            "processing": true,
            "serverSide": true,
            "filter": true, // this is for disable filter (search box)
            "orderMulti": true, // for disable multiple column at once
            "pageLength": 10,   
            "stateSave": true,     
            "ajax": {
                "url": "/Admin/users/List",
                "type": "POST",
                "datatype": "json"
            },
            "columnDefs":[
            {
                "targets": [0],
                "searchable": false,
                "orderable": false
            },
            {
                "targets": [1],
                "searchable": false,
                "orderable": false
            },
            {
                "targets": [2],
                "searchable": false,
                "orderable": false
            }],
            "columns": [
                { "data": "name", "title": "Adı", "name": "adi", "autoWidth": true },
                { "data": "email", "title": "Email", "name": "email", "autoWidth": true },
                {
                    data:null,
                    "render": function (data, type, full, meta)
                    { return getActionMenu(data); }
                }
            ]
        });
        
        function DeleteData(id) {
                if (confirm("Are you sure you want to delete ...?")) {
                    Delete(id);
                }
                else {
                    return false;
                }
            }
            
        function Delete(id) {
            var url = "Delete/" + id;
            $.ajax({
                url: url,
                type: 'DELETE',
                success: function(response) {
                    alert("Silme başarılı!");
                    const oTable = $('#usersGrid').DataTable();
                    oTable.draw();
                },
                error: function(response) {
                    alert("Silerken hata oluştu!");
                }
            });
        }
    </script>
}
